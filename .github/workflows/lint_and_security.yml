name: Lint and Security Checks

on:
  push:
    branches:
      - main  # Or your main/default branch
  pull_request:
    branches:
      - main  # Or your main/default branch

jobs:
  lint-and-security:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'  # Or your project's Python version

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install nbqa flake8 pylint bandit
        # If your project has other dependencies, install them here:
        # pip install -r requirements.txt

    - name: Install reviewdog
      run: |
        curl -sfL https://raw.githubusercontent.com/reviewdog/reviewdog/master/install.sh | sh -s -- -b /usr/local/bin

    - name: Run flake8 with reviewdog (notebooks)
      env:
        REVIEWDOG_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        nbqa flake8 . | reviewdog -f=flake8 -name="flake8 (nb)" -reporter=github-pr-review -filter_mode=added -fail_on_error

    - name: Run flake8 with reviewdog (Python files)
      uses: reviewdog/action-flake8@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        reporter: github-pr-review
        flake8_flags: "--config=.flake8"  # If you have a .flake8 config file
        filter_mode: added

    - name: Run pylint with reviewdog (notebooks)
      env:
        REVIEWDOG_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        nbqa pylint . --output-format=pylint | reviewdog -f=pylint -name="pylint (nb)" -reporter=github-pr-review -filter_mode=added -fail_on_error

    - name: Run pylint with reviewdog (Python files)
      env:
        REVIEWDOG_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        pylint --output-format=pylint --rcfile=.pylintrc . | reviewdog -f=pylint -name="pylint" -reporter=github-pr-review -filter_mode=added -fail_on_error

    - name: Run bandit with reviewdog (notebooks)
      env:
        REVIEWDOG_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        nbqa bandit -r . | reviewdog -f=bandit -name="bandit (nb)" -reporter=github-pr-review -filter_mode=added -fail_on_error

    - name: Run bandit with reviewdog (Python files)
      env:
        REVIEWDOG_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        bandit -r . | reviewdog -f=bandit -name="bandit" -reporter=github-pr-review -filter_mode=added -fail_on_error
